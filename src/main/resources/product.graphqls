#Product
type  Product {
    id:Int
    productName: String
    details: String
    category: String
    ShopId: Int
    imagesPath: [String]
}

type  ProductAttributes {
#    id:Int
    text: String
    attribute: Attribute
}

type Attribute {
#    id:Int
    attribute: String
}

type Variations {
    id:Int
    name: String
    options: [Options]
    productId: Int
}

type Options {
#    id: Int
    price: Int
    stock: Int
    image:String
}
type SalesInformation {
    id:Int
    salePrice: Float
    startingBid: Float
    storage:Int
    auctionPeriod:Int
    nextAuction:Int
    saleTypeName: String
    timeUnitForAuctionPeriod: String
    timeUnitForNextAuction:String
    productId: Int
}


#Product Input

input InputProduct {
    productName: String
    details: String
    category: String
    ShopId: Int
    imagesPath: [String]
}

input  InputProductAttributes {
#    id:Int
    text: String
    attribute: InputAttribute
}

input InputAttribute {
#    id:Int
    attribute: String
}

input InputVariations {
#    id:Int
    name: String
    options: [InputOptions]
    productId: Int
}

input InputOptions {
#    id: Int
    price: Int
    stock: Int
    image:String
}
input InputSalesInformation {
    salePrice: Float
    startingBid: Float
    storage:Int
    auctionPeriod:Int
    nextAuction:Int
    saleTypeName: String
    timeUnitForAuctionPeriod: String
    timeUnitForNextAuction:String
    productId: Int
}

#Category
type CategoryDto {
    categoryName: String
    attributes: [AttributeDto]
}

type AttributeDto {
    attribute: String
}

type Category{
    name: String
    order: Int
    categoryName: String
}