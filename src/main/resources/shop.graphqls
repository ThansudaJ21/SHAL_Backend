#Shop
type Shop{
    id: Int
    shopName:String
    idCard:String
    shopLogoImagePath: String
    selfiePhotoWithIdCardPath: String
    promptPay: String
    email: String
    shopAddress: ShopAddress
    shopStatus: String
    failureReasonLists: [QueryFailureReasonListDto]
    userId: Int
}
type FailureReason {
    id:Int
    text: String
    failureReasons: FailureListDto
    shopId:Int
}
type QueryFailureReasonListDto {
    id:Int
    text: String
    failureReasons: FailureReasonDto
}
type QueryFailureReasonForUserIdDto {
    id:Int
    text: String
    failureReasons: FailureListForUserIdDto
}
type QueryFailureReasonDto {
    id:Int
    text: String
    failureReasons: FailureListDto
}
type FailureReasonDto {
    id: Int
    reason: String
}
type FailureListForUserIdDto {
    reason: String
}
type FailureListDto {
    reason: String
}

input InputFailureReason {
    id: Int
    text: String
    failureReasons: InputReason
}
input InputReason {
    reason: String
}

input ShopInput {
    shopName:String
    idCard:String
    shopLogoImagePath: String
    selfiePhotoWithIdCardPath: String
    promptPay: String
    email: String
    shopStatus: String
    userId: Int
    shopAddress: ShopAddressInput
}

type ShopAddress {
    houseNumber: String
    moo: String
    postalCode: String
    district: String
    subDistrict: String
    province: String
}

input ShopAddressInput {
    houseNumber: String
    moo: String
    postalCode: String
    district: String
    subDistrict: String
    province: String
}
type ShopQueryByUserId{
    id: Int
    shopName:String
    idCard:String
    shopLogoImagePath: String
    selfiePhotoWithIdCardPath: String
    promptPay: String
    email: String
    shopAddress: ShopAddress
    user: UserQueryShop
    shopStatus: String
    failureReasonLists: [QueryFailureReasonForUserIdDto]
}
type ShopQuery{
    id: Int
    shopName:String
    idCard:String
    shopLogoImagePath: String
    selfiePhotoWithIdCardPath: String
    promptPay: String
    email: String
    shopAddress: ShopAddress
#    user: User
    shopStatus: String
    failureReasonLists: [QueryFailureReasonDto]
}
type User {
    id: Int
    userId: String
    email: String
    displayName: String
    firstname: String
    lastname: String
    phoneNumber: String
    enabled: Boolean
    pictureUrl:String
    authorities: [Authorities]
}
type UserAuthorities {
    name: String
}
type ShopQueryForRegisterShop{
    id: Int
    shopName:String
    idCard:String
    shopLogoImagePath: String
    selfiePhotoWithIdCardPath: String
    promptPay: String
    email: String
    shopAddress: ShopAddress
#    user: UserQueryShop
    shopStatus: String
    failureReasonLists: [QueryFailureReasonDto]
}
type UserQueryShop {
    id: Int
    userId: String
    email: String
    displayName: String
    firstname: String
    lastname: String
    pictureUrl:String
    phoneNumber: String
    enabled: Boolean
    authorities: [Authorities]
}
type  AuthoritiesForUserQueryShop {
    name:String
}
input ShopStatusInput {
    id: Int
    userId : Int
    shopStatus: String
}

input ShopQueryFilter {
    shopName:String
    shopStatus:String
}

input ShopQueryFilterByShopStatus{
    shopStatus: String
}

type PageShop {
    number: Int
    totalPages: Int
    totalElements: Int
    content: [ShopQuery]
}
type PostCodeProvinceDto{
    province: String
    amphoes: [PostCodeAmphoeDto]
}

type PostCodeAmphoeDto{
    amphoe: String
    tumbons: [String]
}